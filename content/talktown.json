{"markups": {"AddressTopic": ["work", "weather"], "ChangeSubjectTo": ["interlocutor.top_source(speaker, 'first name')", "speaker.occupation.company"], "EffectConditions": ["speaker.relationships[interlocutor].charge /= 2.0<--True"], "Moves": ["reassert about the weather", "say something negative about the weather", "say something positive", "say something negative", "request how do you know my name", "say first name", "greet", "ask where do you work", "introduce self", "say last name", "request to confirm or correct first name", "ask how are you", "answer how are you", "reask about the weather", "storm off", "acknowledge redress", "ask are you from here", "make small talk", "say something positive about the weather", "say rude remark", "say goodbye back", "confirm or correct first name", "end conversation after rude remark", "repair incorrect first name usage", "say nice to meet you", "introduce self back", "ask about the weather", "respond about the weather", "explain how i know your name", "request name", "answer are you from here", "redress incorrect first name usage", "answer where do you work", "assert about the weather", "say goodbye", "greet back", "wrap up conversation"], "Preconditions": ["lambda interlocutor: interlocutor.ready_to_work", "lambda speaker, interlocutor: not speaker.belief(interlocutor, 'workplace')", "lambda speaker, interlocutor: interlocutor not in speaker.relationships", "lambda conversation: conversation.has_obligation(conversation.speaker, 'say nice to meet you')", "lambda conversation: not conversation.earlier_move('either', 'assert about the weather')", "lambda conversation: not conversation.earlier_move(conversation.speaker, 'respond about the weather')", "lambda conversation: conversation.earlier_move(conversation.speaker, 'respond about the weather')", "lambda conversation: conversation.earlier_move(conversation.speaker, 'assert about the weather')", "lambda speaker: speaker.occupation and speaker.occupation.has_a_boss", "lambda speaker, subject: not speaker.belief(subject, 'first name')", "lambda conversation: not conversation.earlier_move(conversation.speaker, 'assert about the weather')", "lambda speaker, subject: speaker.belief(subject, 'first name')", "lambda conversation: conversation.earlier_move(conversation.interlocutor, 'say first name')", "lambda conversation: conversation.has_obligation(conversation.speaker, 'confirm or correct first name')", "lambda speaker, subject: speaker.belief(subject, 'last name')", "lambda conversation: conversation.last_turn and conversation.last_turn.speaker is conversation.interlocutor", "lambda conversation: conversation.earlier_move(conversation.speaker, 'answer are you from here')", "lambda conversation: conversation.earlier_move(conversation.speaker, 'say first name')", "lambda speaker: speaker.personality.gregarious", "lambda conversation: conversation.earlier_move(conversation.speaker, 'ask about the weather')", "lambda speaker, interlocutor: speaker.routine.working and not interlocutor.routine.working", "lambda conversation: not conversation.earlier_move('either', 'say goodbye')", "lambda speaker: speaker.male", "lambda conversation: not conversation.earlier_move('either', 'say nice to meet you')", "lambda interlocutor: not interlocutor.routine.working", "lambda speaker, interlocutor: interlocutor in speaker.relationships", "lambda conversation: conversation.last_interlocutor_turn and conversation.last_interlocutor_turn.performed_move('say something positive about the weather')", "lambda speaker: speaker.occupation", "lambda speaker: not speaker.occupation", "lambda speaker, interlocutor: speaker.inaccurate_belief(interlocutor, 'first name')", "lambda conversation: not conversation.earlier_move(conversation.interlocutor, 'say first name')", "lambda conversation: conversation.has_obligation(conversation.speaker, 'answer are you from here')", "lambda speaker: speaker.game.weather == 'good'", "lambda speaker, interlocutor: speaker.belief(interlocutor, 'first name')", "lambda conversation: conversation.earlier_move(conversation.speaker, 'answer are you from here') and conversation.turns_since_earlier_move(conversation.speaker, 'answer are you from here') > 2", "lambda conversation: not conversation.earlier_move('either', 'ask about the weather')", "lambda conversation: conversation.earlier_move(conversation.interlocutor, 'introduce self')", "lambda conversation: conversation.last_turn and conversation.last_turn.speaker is conversation.speaker", "lambda speaker: speaker.personality.cold", "lambda speaker: speaker.game.weather == 'bad' or speaker.personality.low_a", "lambda speaker: speaker.personality.high_e", "lambda conversation: len(conversation.turns) < 6", "lambda speaker, interlocutor: speaker.personality.low_a and interlocutor in speaker.enemies", "lambda conversation: not (conversation.last_turn and conversation.last_turn.speaker is conversation.speaker and conversation.last_turn.addressed_topic('weather'))", "lambda conversation: conversation.last_interlocutor_turn and conversation.last_interlocutor_turn.performed_move('say something negative about the weather')", "lambda conversation: len(conversation.turns) >= 6", "lambda conversation: not conversation.earlier_move(conversation.speaker, 'ask about the weather')", "lambda speaker, interlocutor: interlocutor.accurate_belief(speaker, 'first name')", "lambda conversation: conversation.has_obligation(conversation.speaker, 'respond about the weather')", "lambda speaker, subject: not speaker.belief(subject, 'last name')", "lambda conversation: conversation.speaker is conversation.initiator", "lambda speaker: speaker.moves", "lambda speaker, interlocutor: interlocutor not in speaker.mind.mental_models", "lambda conversation: not conversation.earlier_move(conversation.speaker, 'say first name')", "lambda speaker, interlocutor: speaker.top_source(interlocutor, 'first name') is not speaker", "lambda conversation: not conversation.earlier_move('either', 'introduce self')", "lambda conversation: conversation.speaker is not conversation.initiator", "lambda conversation: not conversation.already_a_topic('weather')", "lambda speaker: speaker.personality.high_a", "lambda conversation: conversation.earlier_move(conversation.interlocutor, 'ask how are you')", "lambda interlocutor: interlocutor.routine.working", "lambda speaker: speaker.male and speaker.occupation and speaker.occupation.level < 2", "lambda speaker, interlocutor: speaker.accurate_belief(interlocutor, 'first name')", "lambda conversation: not conversation.earlier_move('either', 'ask how are you')", "lambda speaker: speaker.occupation and speaker.occupation.vocation == 'bartender'", "lambda conversation: conversation.last_interlocutor_turn.performed_move('say nice to meet you')", "lambda speaker, interlocutor: speaker.first_name == interlocutor.first_name", "lambda conversation: conversation.earlier_move(conversation.interlocutor, 'say goodbye')", "lambda speaker: speaker.routine.working", "lambda speaker: speaker.personality.low_a", "lambda speaker: speaker.personality.low_e"], "Propositions": ["subject=speaker;feature_type=job title;feature_value=speaker.occupation.vocation;feature_object_itself=None", "subject=speaker;feature_type=first name;feature_value=speaker.first_name;feature_object_itself=None", "subject=speaker;feature_type=last name;feature_value=speaker.last_name;feature_object_itself=None", "subject=subject;feature_type=last name;feature_value=speaker.belief(subject, 'first name');feature_object_itself=None", "subject=interlocutor;feature_type=first name;feature_value=speaker.belief(interlocutor, 'first name');feature_object_itself=None", "subject=speaker;feature_type=workplace;feature_value=speaker.occupation.company.name;feature_object_itself=speaker.occupation.company", "subject=speaker;feature_type=job shift;feature_value=speaker.occupation.shift;feature_object_itself=None", "subject=subject;feature_type=last name;feature_value=speaker.belief(subject, 'last name');feature_object_itself=None"], "PushObligation": ["respond about the weather", "answer how are you", "redress incorrect first name usage", "say goodbye back", "introduce self back", "greet back", "answer where do you work", "end conversation after rude remark", "confirm or correct first name", "say nice to meet you", "repair incorrect first name usage", "answer are you from here", "request how do you know my name", "introduce self", "explain how i know your name", "say goodbye"], "PushSpeakerObligation": [], "PushTopic": ["weather", "work"], "ViolationConditions": ["unprompted how i am<--lambda conversation: conversation.no_obligation(conversation.speaker, 'answer how are you')", "belated how are you<--lambda conversation: conversation.turns_taken(conversation.interlocutor) > 3", "repeated resolved question<--lambda conversation: conversation.earlier_move(conversation.speaker, 'ask how are you')", "lie<--lambda conversation: conversation.speaker.birth and conversation.speaker.birth.city is conversation.interlocutor.location.city", "unbound 'thing is' anaphor<--lambda conversation: conversation.last_turn and conversation.last_turn.did_not_address_topic('weather')", "unprompted greet back<--lambda conversation: conversation.no_obligation(conversation.speaker, 'greet back')", "abort initiated conversation<--lambda conversation: conversation.speaker is conversation.initiator", "unbound anaphoric question<--lambda conversation: not (conversation.last_turn and conversation.last_turn.speaker is conversation.speaker and conversation.last_turn.performed_move('answer are you from here'))", "awkward rehash<--lambda conversation: conversation.earlier_move('either', 'reassert about the weather')", "answer unasked question<--lambda conversation: not conversation.has_obligation(conversation.speaker, 'answer where do you work')", "repeated resolved question<--lambda conversation: conversation.earlier_move(conversation.speaker, 'ask where do you work')", "lie<--lambda conversation: not conversation.speaker.birth or conversation.speaker.birth.city is not conversation.interlocutor.location.city", "awkward rehash<--lambda conversation: conversation.earlier_move(conversation.speaker, 'introduce self')", "repeated resolved question<--lambda conversation: conversation.earlier_move(conversation.speaker, 'ask are you from here')", "awkward rehash<--lambda conversation: conversation.earlier_move('either', 'reask about the weather')"]}, "nonterminals": {", um, ": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": [", ", "[[um/hmm/huh]]", ", "], "markup": {}}]}, "Correct": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["Correct"], "markup": {}}, {"app_rate": 1, "expansion": ["That's right"], "markup": {}}, {"app_rate": 1, "expansion": ["[[Yes]]"], "markup": {}}]}, "Greeting word": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 3, "expansion": ["Hi"], "markup": {}}, {"app_rate": 4, "expansion": ["Hey"], "markup": {}}, {"app_rate": 6, "expansion": ["Hello"], "markup": {}}, {"app_rate": 1, "expansion": ["Greetings"], "markup": {}}, {"app_rate": 1, "expansion": ["Hi there"], "markup": {}}]}, "Hmm/Um/Uh": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 5, "expansion": ["Hmm"], "markup": {}}, {"app_rate": 4, "expansion": ["Um"], "markup": {}}, {"app_rate": 2, "expansion": ["Uh"], "markup": {}}]}, "I have to go now": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["I have to go now"], "markup": {}}, {"app_rate": 1, "expansion": ["I have to ", "[[run/leave/jet]]"], "markup": {}}]}, "In my opinion,": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 10, "expansion": ["I think"], "markup": {}}, {"app_rate": 1, "expansion": ["Personally, I think"], "markup": {}}, {"app_rate": 1, "expansion": ["In my opinion,"], "markup": {}}, {"app_rate": 2, "expansion": ["I think that"], "markup": {}}, {"app_rate": 4, "expansion": ["To me,"], "markup": {}}, {"app_rate": 3, "expansion": ["For me,"], "markup": {}}, {"app_rate": 1, "expansion": ["In my view,"], "markup": {}}, {"app_rate": 1, "expansion": ["From my vantage,"], "markup": {}}]}, "Marker to wrap up conversation with someone you know": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["Hey"], "markup": {}}, {"app_rate": 1, "expansion": ["Well"], "markup": {}}, {"app_rate": 1, "expansion": ["Hey, ", "[[interlocutor first name]]"], "markup": {}}, {"app_rate": 1, "expansion": ["Well, ", "[[interlocutor first name]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[interlocutor first name]]"], "markup": {}}]}, "Negative adj": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 10, "expansion": ["Bad"], "markup": {}}, {"app_rate": 3, "expansion": ["Horrible"], "markup": {}}, {"app_rate": 3, "expansion": ["Poor"], "markup": {}}, {"app_rate": 2, "expansion": ["Miserable"], "markup": {}}, {"app_rate": 2, "expansion": ["Rotten"], "markup": {}}]}, "No": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 8, "expansion": ["No"], "markup": {}}, {"app_rate": 4, "expansion": ["Nope"], "markup": {}}, {"app_rate": 1, "expansion": ["Nah"], "markup": {}}]}, "Oh shoot": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["Oh shoot"], "markup": {}}, {"app_rate": 1, "expansion": ["That's right"], "markup": {}}, {"app_rate": 1, "expansion": ["Ah, that's right"], "markup": {}}, {"app_rate": 1, "expansion": ["Shoot"], "markup": {}}]}, "Positive adj": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["Lovely"], "markup": {}}, {"app_rate": 5, "expansion": ["Good"], "markup": {}}, {"app_rate": 5, "expansion": ["Great"], "markup": {}}, {"app_rate": 5, "expansion": ["Nice"], "markup": {}}, {"app_rate": 3, "expansion": ["Fantastic"], "markup": {}}, {"app_rate": 3, "expansion": ["Excellent"], "markup": {}}, {"app_rate": 3, "expansion": ["Wonderful"], "markup": {}}, {"app_rate": 3, "expansion": ["Spectacular"], "markup": {}}, {"app_rate": 4, "expansion": ["Amazing"], "markup": {}}]}, "Seriously/really/i mean it": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["Seriously"], "markup": {}}, {"app_rate": 1, "expansion": ["Really"], "markup": {}}, {"app_rate": 1, "expansion": ["Truly"], "markup": {}}, {"app_rate": 1, "expansion": ["I mean it"], "markup": {}}]}, "Thanks for the chat/conversation": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["Nice chatting with you."], "markup": {}}, {"app_rate": 1, "expansion": ["I enjoyed chatting with you."], "markup": {}}, {"app_rate": 1, "expansion": ["[[thanks for the chat/conversation>gregarious]]"], "markup": {}}]}, "Thanks/thank you": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["Thanks"], "markup": {}}, {"app_rate": 1, "expansion": ["Thank you"], "markup": {}}]}, "Weather anaphor": {"complete": true, "deep": false, "markup": {"ViolationConditions": ["unbound 'thing is' anaphor<--lambda conversation: conversation.last_turn and conversation.last_turn.did_not_address_topic('weather')"]}, "rules": [{"app_rate": 1, "expansion": ["It"], "markup": {"ViolationConditions": ["unbound 'thing is' anaphor<--lambda conversation: conversation.last_turn and conversation.last_turn.did_not_address_topic('weather')"]}}]}, "What about you": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 4, "expansion": ["What about you?"], "markup": {}}, {"app_rate": 5, "expansion": ["How about you?"], "markup": {}}, {"app_rate": 3, "expansion": ["Yourself?"], "markup": {}}, {"app_rate": 2, "expansion": ["And you?"], "markup": {}}, {"app_rate": 1, "expansion": ["What about yourself?"], "markup": {}}, {"app_rate": 1, "expansion": ["How about yourself?"], "markup": {}}, {"app_rate": 1, "expansion": ["And yourself?"], "markup": {}}, {"app_rate": 2, "expansion": ["You?"], "markup": {}}]}, "Yes": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 6, "expansion": ["Yes"], "markup": {}}, {"app_rate": 8, "expansion": ["Yeah"], "markup": {}}, {"app_rate": 3, "expansion": ["Yup"], "markup": {}}, {"app_rate": 2, "expansion": ["Yep"], "markup": {}}]}, "acknowledge redress": {"complete": true, "deep": true, "markup": {"Moves": ["acknowledge redress"]}, "rules": [{"app_rate": 1, "expansion": ["[[acknowledge redress of incorrect first name usage]]"], "markup": {}}]}, "acknowledge redress of incorrect first name usage": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[acknowledge redress of incorrect first name usage>agreeable]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[acknowledge redress of incorrect first name usage>disagreeable]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[acknowledge redress of incorrect first name usage>anyone]]"], "markup": {}}]}, "acknowledge redress of incorrect first name usage>agreeable": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.personality.high_a"]}, "rules": [{"app_rate": 1, "expansion": ["Hey, ", "[[no worries]]", "[[expressive punct]]"], "markup": {}}]}, "acknowledge redress of incorrect first name usage>anyone": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["It's fine."], "markup": {}}, {"app_rate": 1, "expansion": ["That's fine."], "markup": {}}]}, "acknowledge redress of incorrect first name usage>disagreeable": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.personality.low_a"]}, "rules": [{"app_rate": 1, "expansion": ["You're not making a great impression."], "markup": {}}, {"app_rate": 1, "expansion": ["That's not a way to make a good impression."], "markup": {}}, {"app_rate": 1, "expansion": ["Alright."], "markup": {}}]}, "agree about the weather": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[agree about the weather being good]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[agree about the weather being bad]]"], "markup": {}}]}, "agree about the weather being bad": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: conversation.last_interlocutor_turn and conversation.last_interlocutor_turn.performed_move('say something negative about the weather')"]}, "rules": [{"app_rate": 1, "expansion": ["[[Weather anaphor]]", "'s so ", "[[negative adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[Weather anaphor]]", " ", "[[really/truly/certainly]]", " is ", "[[negative adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[Weather anaphor]]", "'s ", "[[really/truly/certainly]]", " ", "[[negative adj]]", "[[expressive punct]]"], "markup": {"Moves": ["say something negative"]}}, {"app_rate": 2, "expansion": ["[[Weather anaphor]]", " ", "[[really/truly/certainly]]", " is", "[[expressive punct]]"], "markup": {}}]}, "agree about the weather being good": {"complete": true, "deep": false, "markup": {"Moves": ["say something positive"], "Preconditions": ["lambda conversation: conversation.last_interlocutor_turn and conversation.last_interlocutor_turn.performed_move('say something positive about the weather')"]}, "rules": [{"app_rate": 1, "expansion": ["[[Weather anaphor]]", "'s so ", "[[positive adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[Weather anaphor]]", " ", "[[really/truly/certainly]]", " is ", "[[positive adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[Weather anaphor]]", "'s ", "[[really/truly/certainly]]", " ", "[[positive adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 2, "expansion": ["[[Weather anaphor]]", " ", "[[really/truly/certainly]]", " is", "[[expressive punct]]"], "markup": {}}]}, "agreement invitation marker": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 10, "expansion": ["huh"], "markup": {}}, {"app_rate": 6, "expansion": ["right"], "markup": {}}, {"app_rate": 2, "expansion": ["don't you think"], "markup": {}}]}, "answer are you from here": {"complete": true, "deep": false, "markup": {"Moves": ["answer are you from here"], "Preconditions": ["lambda conversation: conversation.has_obligation(conversation.speaker, 'answer are you from here')"]}, "rules": [{"app_rate": 1, "expansion": ["[[answer are you from here affirmatively]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[answer are you from here negatively]]"], "markup": {}}]}, "answer are you from here affirmatively": {"complete": true, "deep": false, "markup": {"ViolationConditions": ["lie<--lambda conversation: not conversation.speaker.birth or conversation.speaker.birth.city is not conversation.interlocutor.location.city"]}, "rules": [{"app_rate": 1, "expansion": ["Born and raised."], "markup": {}}, {"app_rate": 1, "expansion": ["[[Yes]]", ", born and raised."], "markup": {}}, {"app_rate": 1, "expansion": ["[[Yes]]", ", I'm from here."], "markup": {}}, {"app_rate": 1, "expansion": ["[[Yes]]", ", I was born here."], "markup": {}}, {"app_rate": 1, "expansion": ["[[Yes]]", ", I'm from ", "[speaker.location.city.name]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["[[Yes]]", ", I was born here in ", "[speaker.location.city.name]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["[[Yes]]", ", I was born in ", "[speaker.location.city.name]", "."], "markup": {}}]}, "answer are you from here negatively": {"complete": true, "deep": false, "markup": {"ViolationConditions": ["lie<--lambda conversation: conversation.speaker.birth and conversation.speaker.birth.city is conversation.interlocutor.location.city"]}, "rules": [{"app_rate": 1, "expansion": ["[[No]]", ", I wasn't born here."], "markup": {}}, {"app_rate": 4, "expansion": ["[[No]]", ", ", "[[i moved here in year]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["Well, I wasn't born in ", "[interlocutor.location.city.name]", ". ", "[[i moved here in year]]", "."], "markup": {}}, {"app_rate": 2, "expansion": ["[[i moved here in year]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["Well, I wasn't born here. ", "[[i moved here in year]]", "."], "markup": {}}]}, "answer how are you": {"complete": true, "deep": false, "markup": {"Moves": ["answer how are you"], "ViolationConditions": ["unprompted how i am<--lambda conversation: conversation.no_obligation(conversation.speaker, 'answer how are you')"]}, "rules": [{"app_rate": 1, "expansion": ["[[answer how are you to a stranger]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[answer how are you to someone you know]]"], "markup": {}}]}, "answer how are you generically": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["I'm good."], "markup": {}}, {"app_rate": 1, "expansion": ["Not bad."], "markup": {}}, {"app_rate": 1, "expansion": ["I'm alright."], "markup": {}}, {"app_rate": 1, "expansion": ["Fine."], "markup": {}}, {"app_rate": 1, "expansion": ["Alright."], "markup": {}}, {"app_rate": 1, "expansion": ["Good."], "markup": {}}, {"app_rate": 1, "expansion": ["Fine, fine."], "markup": {}}, {"app_rate": 1, "expansion": ["Good, good."], "markup": {}}, {"app_rate": 1, "expansion": ["Not too bad."], "markup": {}}, {"app_rate": 1, "expansion": ["Pretty good."], "markup": {}}]}, "answer how are you negatively": {"complete": true, "deep": false, "markup": {"Moves": ["say something negative"]}, "rules": [{"app_rate": 1, "expansion": ["Things are ", "[[negative adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["I'm not feeling ", "[[positive adj]]", ", honestly."], "markup": {}}]}, "answer how are you positively": {"complete": true, "deep": false, "markup": {"Moves": ["say something positive"]}, "rules": [{"app_rate": 1, "expansion": ["Things are ", "[[positive adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["Everything is ", "[[positive adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["I'm ", "[[positive adj]]", ", thanks."], "markup": {}}]}, "answer how are you to a stranger": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: interlocutor not in speaker.relationships"]}, "rules": [{"app_rate": 1, "expansion": ["[[just answer how are you to a stranger]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[answer how are you to a stranger and ask the same to them]]"], "markup": {}}]}, "answer how are you to a stranger and ask the same to them": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 4, "expansion": ["[[answer how are you generically]]", " ", "[[ask a stranger how are you back]]"], "markup": {}}]}, "answer how are you to someone you know": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: interlocutor in speaker.relationships"]}, "rules": [{"app_rate": 1, "expansion": ["[[just answer how are you to someone you know]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[answer how are you to someone you know and ask the same to them]]"], "markup": {}}]}, "answer how are you to someone you know and ask the same to them": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[just answer how are you to someone you know]]", " ", "[[ask someone you know how are you back]]"], "markup": {}}]}, "answer where do you work": {"complete": true, "deep": false, "markup": {"Moves": ["answer where do you work"], "ViolationConditions": ["answer unasked question<--lambda conversation: not conversation.has_obligation(conversation.speaker, 'answer where do you work')"]}, "rules": [{"app_rate": 1, "expansion": ["[[answer where do you work if you are employed]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[answer where do you work if you are unemployed]]"], "markup": {}}]}, "answer where do you work if you are employed": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["I work at ", "[[speaker workplace]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["I'm a ", "[[speaker vocation]]", " at ", "[[speaker workplace]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["I work ", "[[speaker shift]]", " at ", "[[speaker workplace]]", "."], "markup": {}}]}, "answer where do you work if you are unemployed": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: not speaker.occupation"]}, "rules": [{"app_rate": 1, "expansion": ["I don't work."], "markup": {}}, {"app_rate": 1, "expansion": ["I don't have a job."], "markup": {}}, {"app_rate": 1, "expansion": ["I'm unemployed."], "markup": {}}]}, "are not going to": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[aren't/are not]]", " ", "[[going to/gonna]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[are not going to lower class]]"], "markup": {}}]}, "are not going to lower class": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.male and speaker.occupation and speaker.occupation.level < 2"]}, "rules": [{"app_rate": 1, "expansion": ["ain't ", "[[going to/gonna]]"], "markup": {}}]}, "are you from this town": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 5, "expansion": ["Are you from ", "[speaker.location.city.name]", "?"], "markup": {}}, {"app_rate": 2, "expansion": ["You're not from ", "[speaker.location.city.name]", ", are you?"], "markup": {}}, {"app_rate": 2, "expansion": ["I'm guessing you're not from ", "[speaker.location.city.name]", "?"], "markup": {}}, {"app_rate": 1, "expansion": ["I presume you're not from ", "[speaker.location.city.name]", "?"], "markup": {}}]}, "aren't/are not": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["aren't"], "markup": {}}, {"app_rate": 1, "expansion": ["are not"], "markup": {}}]}, "as explicit a reference to subject as possible": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[as explicit a reference to subject as possible when you know their full name]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[as explicit a reference to subject as possible when you know their first name only]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[as explicit a reference to subject as possible when you know their last name only]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[as explicit a reference to subject as possible when you do not know their name]]"], "markup": {}}]}, "as explicit a reference to subject as possible when you do not know their name": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, subject: not speaker.belief(subject, 'last name')", "lambda speaker, subject: not speaker.belief(subject, 'first name')"]}, "rules": [{"app_rate": 1, "expansion": ["[[, um, ]]", ", I actually don't know ", "[subject.possessive_pronoun]", " name."], "markup": {}}]}, "as explicit a reference to subject as possible when you know their first name only": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 5, "expansion": ["[[subject first name]]", "."], "markup": {}}, {"app_rate": 2, "expansion": ["[[subject first name]]", ". I ", "[[can't remember/don't recall]]", " ", "[subject.possessive_pronoun]", " name."], "markup": {}}, {"app_rate": 2, "expansion": ["[[subject first name]]", ", whose last name I ", "[[can't remember/don't recall]]", "."], "markup": {}}]}, "as explicit a reference to subject as possible when you know their full name": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[subject full name]]"], "markup": {}}]}, "as explicit a reference to subject as possible when you know their last name only": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 2, "expansion": ["From ", "[subject.honorific]", " ", "[[subject last name]]", "."], "markup": {}}, {"app_rate": 4, "expansion": ["From ", "[subject.honorific]", " ", "[[subject last name]]", ". I actually don't know ", "[subject.possessive_pronoun]", " first name."], "markup": {}}, {"app_rate": 2, "expansion": ["From ", "[subject.honorific]", " ", "[[subject last name]]", ". I don't know ", "[subject.possessive_pronoun]", " first name."], "markup": {}}, {"app_rate": 6, "expansion": ["From ", "[subject.honorific]", " ", "[[subject last name]]", ". I ", "[[can't remember/don't recall]]", " ", "[subject.possessive_pronoun]", " first name."], "markup": {}}]}, "ask a stranger how are you": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: interlocutor not in speaker.relationships"], "ViolationConditions": ["belated how are you<--lambda conversation: conversation.turns_taken(conversation.interlocutor) > 3"]}, "rules": [{"app_rate": 1, "expansion": ["How ya doing?"], "markup": {}}]}, "ask a stranger how are you back": {"complete": true, "deep": false, "markup": {"Moves": ["ask how are you"], "PushObligation": ["answer how are you"], "ViolationConditions": ["repeated resolved question<--lambda conversation: conversation.earlier_move(conversation.speaker, 'ask how are you')"]}, "rules": [{"app_rate": 4, "expansion": ["You?"], "markup": {}}, {"app_rate": 5, "expansion": ["Yourself?"], "markup": {}}, {"app_rate": 3, "expansion": ["How about you?"], "markup": {}}, {"app_rate": 2, "expansion": ["And you?"], "markup": {}}, {"app_rate": 3, "expansion": ["And yourself?"], "markup": {}}]}, "ask about source of knowledge": {"complete": true, "deep": true, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[how do you know my first name]]"], "markup": {}}]}, "ask about the weather": {"complete": true, "deep": false, "markup": {"Moves": ["ask about the weather"], "Preconditions": ["lambda conversation: not conversation.earlier_move('either', 'assert about the weather')", "lambda conversation: not conversation.earlier_move('either', 'ask about the weather')"], "PushObligation": ["respond about the weather"], "PushTopic": ["weather"]}, "rules": [{"app_rate": 1, "expansion": ["[[generally ask about the weather]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[negatively ask about the weather]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[positively ask about the weather]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[reask about the weather]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[ask for the first time about the weather]]"], "markup": {}}]}, "ask anyone how are you": {"complete": true, "deep": false, "markup": {"ViolationConditions": ["belated how are you<--lambda conversation: conversation.turns_taken(conversation.interlocutor) > 3"]}, "rules": [{"app_rate": 1, "expansion": ["[[ask anyone how are you back]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[ask anyone how are you first]]"], "markup": {}}]}, "ask anyone how are you back": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: conversation.earlier_move(conversation.interlocutor, 'ask how are you')"]}, "rules": [{"app_rate": 1, "expansion": ["How's it going with you?"], "markup": {}}]}, "ask anyone how are you first": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["How's it going?"], "markup": {"Preconditions": ["lambda conversation: not conversation.earlier_move('either', 'ask how are you')"]}}]}, "ask are you from here": {"complete": true, "deep": false, "markup": {"Moves": ["ask are you from here"], "Preconditions": ["lambda speaker, interlocutor: interlocutor not in speaker.relationships"], "PushObligation": ["answer are you from here"], "ViolationConditions": ["repeated resolved question<--lambda conversation: conversation.earlier_move(conversation.speaker, 'ask are you from here')"]}, "rules": [{"app_rate": 1, "expansion": ["[[ask are you from here after several turns]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[ask are you from here right away]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[ask are you from here back]]"], "markup": {}}]}, "ask are you from here after several turns": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: len(conversation.turns) >= 6"]}, "rules": [{"app_rate": 3, "expansion": ["Are you from ", "[speaker.location.city.name]", "?"], "markup": {}}, {"app_rate": 1, "expansion": ["Are you from here?"], "markup": {}}, {"app_rate": 2, "expansion": ["You're not from here, are you?"], "markup": {}}, {"app_rate": 1, "expansion": ["You're not from ", "[speaker.location.city.name]", ", are you?"], "markup": {}}]}, "ask are you from here back": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: conversation.earlier_move(conversation.speaker, 'answer are you from here')"]}, "rules": [{"app_rate": 1, "expansion": ["[[ask are you from here back immediately after answering the same]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[ask are you from here back after intervening turns]]"], "markup": {}}]}, "ask are you from here back after intervening turns": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: conversation.earlier_move(conversation.speaker, 'answer are you from here') and conversation.turns_since_earlier_move(conversation.speaker, 'answer are you from here') > 2"]}, "rules": [{"app_rate": 4, "expansion": ["So, how about you? Are you from here?"], "markup": {}}, {"app_rate": 5, "expansion": ["So, how about you? Are you from ", "[speaker.location.city.name]", "?"], "markup": {}}, {"app_rate": 1, "expansion": ["So, what about you? Are you from ", "[speaker.location.city.name]", "?"], "markup": {}}, {"app_rate": 2, "expansion": ["So, what about you? Are you from here?"], "markup": {}}]}, "ask are you from here back immediately after answering the same": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: conversation.earlier_move(conversation.speaker, 'answer are you from here')"], "ViolationConditions": ["unbound anaphoric question<--lambda conversation: not (conversation.last_turn and conversation.last_turn.speaker is conversation.speaker and conversation.last_turn.performed_move('answer are you from here'))"]}, "rules": [{"app_rate": 1, "expansion": ["[[What about you]]"], "markup": {}}]}, "ask are you from here right away": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: len(conversation.turns) < 6"]}, "rules": [{"app_rate": 1, "expansion": ["[[you do not look familiar]]", ". ", "[[are you from this town]]"], "markup": {}}]}, "ask for the first time about the weather": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: not conversation.earlier_move(conversation.speaker, 'ask about the weather')", "lambda conversation: not conversation.earlier_move(conversation.speaker, 'assert about the weather')"]}, "rules": [{"app_rate": 1, "expansion": ["[[generally ask about the weather]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[negatively ask about the weather]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[positively ask about the weather]]"], "markup": {}}]}, "ask how are you": {"complete": true, "deep": false, "markup": {"Moves": ["ask how are you"], "PushObligation": ["answer how are you"], "ViolationConditions": ["repeated resolved question<--lambda conversation: conversation.earlier_move(conversation.speaker, 'ask how are you')"]}, "rules": [{"app_rate": 1, "expansion": ["[[ask someone you know how are you]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[ask a stranger how are you]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[ask anyone how are you]]"], "markup": {}}]}, "ask someone you know how are you": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: interlocutor in speaker.relationships"], "ViolationConditions": ["repeated resolved question<--lambda conversation: conversation.earlier_move(conversation.speaker, 'ask how are you')"]}, "rules": [{"app_rate": 1, "expansion": ["How have you been?"], "markup": {}}, {"app_rate": 1, "expansion": ["How's everything going?"], "markup": {}}, {"app_rate": 1, "expansion": ["How are things?"], "markup": {}}, {"app_rate": 1, "expansion": ["How are you?"], "markup": {}}]}, "ask someone you know how are you back": {"complete": true, "deep": false, "markup": {"Moves": ["ask how are you"], "PushObligation": ["answer how are you"], "ViolationConditions": ["repeated resolved question<--lambda conversation: conversation.earlier_move(conversation.speaker, 'ask how are you')"]}, "rules": [{"app_rate": 1, "expansion": ["How's everything going with you?"], "markup": {}}, {"app_rate": 1, "expansion": ["How about you?"], "markup": {}}, {"app_rate": 1, "expansion": ["And you?"], "markup": {}}, {"app_rate": 1, "expansion": ["You?"], "markup": {}}, {"app_rate": 1, "expansion": ["Yourself?"], "markup": {}}, {"app_rate": 1, "expansion": ["How are things for you?"], "markup": {}}, {"app_rate": 1, "expansion": ["How are things with you?"], "markup": {}}, {"app_rate": 1, "expansion": ["How have you been doing?"], "markup": {}}]}, "ask where do you work": {"complete": true, "deep": false, "markup": {"Moves": ["ask where do you work"], "Preconditions": ["lambda interlocutor: not interlocutor.routine.working", "lambda speaker, interlocutor: not speaker.belief(interlocutor, 'workplace')", "lambda interlocutor: interlocutor.ready_to_work"], "PushObligation": ["answer where do you work"], "PushTopic": ["work"], "ViolationConditions": ["repeated resolved question<--lambda conversation: conversation.earlier_move(conversation.speaker, 'ask where do you work')"]}, "rules": [{"app_rate": 2, "expansion": ["What do you do for a living?"], "markup": {}}, {"app_rate": 7, "expansion": ["Do you work around here?"], "markup": {}}, {"app_rate": 1, "expansion": ["Where do you work?"], "markup": {}}, {"app_rate": 5, "expansion": ["What do you do?"], "markup": {}}]}, "assert about the weather": {"complete": true, "deep": false, "markup": {"Moves": ["assert about the weather"], "PushTopic": ["weather"]}, "rules": [{"app_rate": 1, "expansion": ["[[bring up the weather]]"], "markup": {"Preconditions": ["lambda conversation: not conversation.earlier_move(conversation.speaker, 'ask about the weather')", "lambda conversation: not conversation.earlier_move(conversation.speaker, 'assert about the weather')"]}}, {"app_rate": 1, "expansion": ["[[respond about the weather]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[reassert about the weather]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[respond again about the weather]]"], "markup": {}}]}, "assert about the weather generally": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[negatively assert about the weather]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[positively assert about the weather]]"], "markup": {}}]}, "better/should/ought to": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["better"], "markup": {}}, {"app_rate": 1, "expansion": ["should"], "markup": {}}, {"app_rate": 1, "expansion": ["ought to"], "markup": {}}]}, "bring up the weather": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: not conversation.already_a_topic('weather')"], "PushObligation": ["respond about the weather"], "PushTopic": ["weather"]}, "rules": [{"app_rate": 1, "expansion": ["[[negatively assert about the weather]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[positively assert about the weather]]"], "markup": {}}]}, "can't remember/don't recall": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["can't remember"], "markup": {}}, {"app_rate": 1, "expansion": ["don't remember"], "markup": {}}, {"app_rate": 1, "expansion": ["can't recall"], "markup": {}}, {"app_rate": 1, "expansion": ["don't recall"], "markup": {}}, {"app_rate": 1, "expansion": ["am not sure"], "markup": {}}, {"app_rate": 1, "expansion": ["am hazy about"], "markup": {}}]}, "chat/conversation": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["chat"], "markup": {}}, {"app_rate": 1, "expansion": ["conversation"], "markup": {}}, {"app_rate": 1, "expansion": ["chit-chat"], "markup": {}}, {"app_rate": 1, "expansion": ["exchange"], "markup": {}}]}, "confirm correct first name": {"complete": true, "deep": false, "markup": {"Moves": ["say first name"], "Preconditions": ["lambda speaker, interlocutor: interlocutor.accurate_belief(speaker, 'first name')"]}, "rules": [{"app_rate": 1, "expansion": ["[[confirm correct first name when you do not know them]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[confirm correct first name when you do know them]]"], "markup": {}}]}, "confirm correct first name when you do know them": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 2, "expansion": ["You got it."], "markup": {}}, {"app_rate": 3, "expansion": ["[[Correct]]", "."], "markup": {}}, {"app_rate": 5, "expansion": ["[[Correct]]", ", you got it."], "markup": {}}, {"app_rate": 6, "expansion": ["[[Correct]]", ", that's it."], "markup": {}}, {"app_rate": 2, "expansion": ["[[Correct]]", ", that's my name."], "markup": {}}, {"app_rate": 10, "expansion": ["[[Correct]]", ", ", "[[speaker first name]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["[[speaker first name]]", ", yes."], "markup": {}}]}, "confirm correct first name when you do not know them": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 4, "expansion": ["[[Correct]]", ". ", "[[how do you know my first name]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[how do you know my first name]]"], "markup": {}}]}, "confirm or correct first name": {"complete": true, "deep": true, "markup": {"Moves": ["confirm or correct first name"], "Preconditions": ["lambda conversation: conversation.has_obligation(conversation.speaker, 'confirm or correct first name')"]}, "rules": [{"app_rate": 1, "expansion": ["[[confirm correct first name]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[correct incorrect first name upon request to confirm or correct it]]"], "markup": {}}]}, "correct incorrect first name after arbitrary such usage": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["It's ", "[[speaker first name]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["My name is ", "[[speaker first name]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["That's not my name. My name is ", "[[speaker first name]]", "."], "markup": {}}]}, "correct incorrect first name upon request to confirm or correct it": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: speaker.inaccurate_belief(interlocutor, 'first name')", "lambda conversation: conversation.has_obligation(conversation.speaker, 'confirm or correct first name')"]}, "rules": [{"app_rate": 1, "expansion": ["No, it's ", "[[speaker first name]]", "."], "markup": {}}]}, "disagree about the weather": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[disagree about the weather being bad]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[disagree about the weather being good]]"], "markup": {}}]}, "disagree about the weather being bad": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: conversation.last_interlocutor_turn and conversation.last_interlocutor_turn.performed_move('say something negative about the weather')"]}, "rules": [{"app_rate": 4, "expansion": ["[[In my opinion,]]", " ", "[[weather anaphor]]", " is ", "[[positive adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 2, "expansion": ["[[In my opinion,]]", " ", "[[weather anaphor]]", "'s ", "[[intensifier]]", " ", "[[positive adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 2, "expansion": ["[[In my opinion,]]", " ", "[[weather anaphor]]", " is ", "[[intensifier]]", " ", "[[positive adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 8, "expansion": ["[[In my opinion,]]", " ", "[[weather anaphor]]", "'s ", "[[positive adj]]", "[[expressive punct]]"], "markup": {}}]}, "disagree about the weather being good": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: conversation.last_interlocutor_turn and conversation.last_interlocutor_turn.performed_move('say something positive about the weather')"]}, "rules": [{"app_rate": 2, "expansion": ["[[In my opinion,]]", " ", "[[weather anaphor]]", "'s ", "[[intensifier]]", " ", "[[negative adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 8, "expansion": ["[[In my opinion,]]", " ", "[[weather anaphor]]", "'s ", "[[negative adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 4, "expansion": ["[[In my opinion,]]", " ", "[[weather anaphor]]", " is ", "[[negative adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 2, "expansion": ["[[In my opinion,]]", " ", "[[weather anaphor]]", " is ", "[[intensifier]]", " ", "[[negative adj]]", "[[expressive punct]]"], "markup": {}}]}, "enjoy the rest of your shift": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["Have a good rest of your shift", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["Enjoy the rest of your shift", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["Hope the rest of your shift is ", "[[positive adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["Hope the rest of your shift isn't too ", "[[negative adj]]", "[[expressive punct]]"], "markup": {}}]}, "explain": {"complete": true, "deep": true, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[explain how i know your name]]"], "markup": {}}]}, "explain how i know your name": {"complete": true, "deep": false, "markup": {"Moves": ["explain how i know your name"]}, "rules": [{"app_rate": 1, "expansion": ["[[i am not sure how i know your first name]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[i learned your first name from someone else]]"], "markup": {}}]}, "express suprise at having the same name": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["Ah, great name then", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[Positive adj]]", " name ya got there."], "markup": {}}]}, "express that you have the same name": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["I'm also ", "[[speaker first name]]", ", ", "[[speaker name]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["I'm also ", "[[speaker first name]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["I'm also a ", "[[speaker first name]]", ": ", "[[speaker name]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["Hey, that's my name, too."], "markup": {}}, {"app_rate": 1, "expansion": ["That's my name, too. ", "[[speaker name]]", "."], "markup": {}}]}, "expressive punct": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 5, "expansion": ["."], "markup": {}}, {"app_rate": 1, "expansion": ["[[expressive punct>extroverted]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[expressive punct>introverted]]"], "markup": {}}]}, "expressive punct>extroverted": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.personality.high_e"]}, "rules": [{"app_rate": 1, "expansion": ["!"], "markup": {}}]}, "expressive punct>introverted": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.personality.low_e"]}, "rules": [{"app_rate": 1, "expansion": ["..."], "markup": {}}]}, "farewell": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 3, "expansion": ["Goodbye"], "markup": {}}, {"app_rate": 4, "expansion": ["Bye"], "markup": {}}, {"app_rate": 2, "expansion": ["See ya"], "markup": {}}, {"app_rate": 1, "expansion": ["See you around"], "markup": {}}]}, "generally ask about the weather": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["That weather ", "[[today/tonight]]", ", ", "[[agreement invitation marker]]", "?"], "markup": {}}, {"app_rate": 1, "expansion": ["How about that weather?"], "markup": {}}, {"app_rate": 1, "expansion": ["What do you think about this weather?"], "markup": {}}, {"app_rate": 1, "expansion": ["How do you like this weather?"], "markup": {}}, {"app_rate": 1, "expansion": ["[[generally ask about the weather when you are working and they are not]]"], "markup": {}}]}, "generally ask about the weather when you are working and they are not": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["How's the weather out there?"], "markup": {"Preconditions": ["lambda speaker, interlocutor: speaker.routine.working and not interlocutor.routine.working"]}}, {"app_rate": 1, "expansion": ["I've been stuck inside here, but how's the weather out there?"], "markup": {}}]}, "get back to": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["get back to"], "markup": {}}, {"app_rate": 1, "expansion": ["return to"], "markup": {}}]}, "get back to work": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[get back to]]", " ", "[[the act of working]]"], "markup": {}}]}, "going to/gonna": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["going to"], "markup": {}}, {"app_rate": 1, "expansion": ["gonna"], "markup": {}}]}, "goodbye": {"complete": true, "deep": true, "markup": {"Moves": ["say goodbye"]}, "rules": [{"app_rate": 1, "expansion": ["[[say goodbye first]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[say goodbye back]]"], "markup": {}}]}, "greet": {"complete": true, "deep": true, "markup": {"Moves": ["greet"]}, "rules": [{"app_rate": 1, "expansion": ["[[greet first]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[greet back]]"], "markup": {}}]}, "greet back": {"complete": true, "deep": false, "markup": {"Moves": ["greet back"], "ViolationConditions": ["unprompted greet back<--lambda conversation: conversation.no_obligation(conversation.speaker, 'greet back')"]}, "rules": [{"app_rate": 1, "expansion": ["[[greet back after you said something else]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[greet back immediately]]"], "markup": {}}]}, "greet back after you said something else": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: conversation.last_turn and conversation.last_turn.speaker is conversation.speaker"]}, "rules": [{"app_rate": 1, "expansion": ["[[Greeting word]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["And ", "[[greeting word]]", "."], "markup": {}}]}, "greet back immediately": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: conversation.last_turn and conversation.last_turn.speaker is conversation.interlocutor"]}, "rules": [{"app_rate": 3, "expansion": ["[[Greeting word]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 4, "expansion": ["Oh, ", "[[greeting word]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[Greeting word]]", ", ", "[[interlocutor first name]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["Oh, ", "[[greeting word]]", ", ", "[[interlocutor first name]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[greet back immediately and rudely]]"], "markup": {}}]}, "greet back immediately and rudely": {"complete": true, "deep": false, "markup": {"EffectConditions": ["speaker.relationships[interlocutor].charge /= 2.0<--True"], "Moves": ["say rude remark"], "Preconditions": ["lambda speaker, interlocutor: speaker.personality.low_a and interlocutor in speaker.enemies"], "PushObligation": ["end conversation after rude remark"]}, "rules": [{"app_rate": 1, "expansion": ["I seriously cannot stand you. Leave me alone!"], "markup": {}}]}, "greet first": {"complete": true, "deep": false, "markup": {"PushObligation": ["greet back"]}, "rules": [{"app_rate": 3, "expansion": ["[[Greeting word]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 5, "expansion": ["[[Greeting word]]", ", ", "[[interlocutor first name]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 5, "expansion": ["[[greet first if you know their first name through the grapevine only]]"], "markup": {}}]}, "greet first if you know their first name through the grapevine only": {"complete": true, "deep": false, "markup": {"Moves": ["request to confirm or correct first name"], "Preconditions": ["lambda speaker, interlocutor: speaker.belief(interlocutor, 'first name')", "lambda speaker, interlocutor: interlocutor not in speaker.relationships"], "PushObligation": ["confirm or correct first name"]}, "rules": [{"app_rate": 1, "expansion": ["[[Greeting word]]", ". ", "[speaker.belief(interlocutor, 'first name')]", ", is it?"], "markup": {}}]}, "greeting word": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["hi"], "markup": {}}, {"app_rate": 1, "expansion": ["hello"], "markup": {}}, {"app_rate": 1, "expansion": ["hey"], "markup": {}}, {"app_rate": 1, "expansion": ["greetings"], "markup": {}}, {"app_rate": 1, "expansion": ["hi there"], "markup": {}}]}, "how do you know my first name": {"complete": true, "deep": false, "markup": {"ChangeSubjectTo": ["interlocutor.top_source(speaker, 'first name')"], "Moves": ["say first name", "request how do you know my name"], "PushObligation": ["explain how i know your name"]}, "rules": [{"app_rate": 5, "expansion": ["Do I know you?"], "markup": {}}, {"app_rate": 1, "expansion": ["Where'd you get my name?"], "markup": {}}, {"app_rate": 1, "expansion": ["Where'd you hear my name?"], "markup": {}}, {"app_rate": 1, "expansion": ["I don't know you. Who told you my name?"], "markup": {}}, {"app_rate": 3, "expansion": ["Have we met before?"], "markup": {}}, {"app_rate": 4, "expansion": ["How do you know my name?"], "markup": {}}]}, "i am not sure how i know your first name": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["I just know it, I guess."], "markup": {}}, {"app_rate": 1, "expansion": ["I ", "[[can't remember/don't recall]]", " who I learned your name from."], "markup": {}}, {"app_rate": 1, "expansion": ["[[Hmm/Um/Uh]]", ", I ", "[[can't remember/don't recall]]", " who I learned your name from."], "markup": {}}, {"app_rate": 1, "expansion": ["[[Hmm/Um/Uh]]", ", I just know it, I guess."], "markup": {}}, {"app_rate": 5, "expansion": ["I don't remember, actually."], "markup": {}}, {"app_rate": 3, "expansion": ["I don't recall, actually."], "markup": {}}]}, "i better get back to work": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[i should]]", " ", "[[get back to work]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[i better get back to work>gregarious]]"], "markup": {}}]}, "i better get back to work>gregarious": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.personality.gregarious", "lambda speaker: speaker.occupation and speaker.occupation.has_a_boss"]}, "rules": [{"app_rate": 1, "expansion": ["[[i should]]", " ", "[[get back to work]]", " before the old boss catches a look this way", "[[expressive punct]]"], "markup": {}}]}, "i learned your first name from someone else": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: speaker.top_source(interlocutor, 'first name') is not speaker"]}, "rules": [{"app_rate": 1, "expansion": ["I heard about you from ", "[[as explicit a reference to subject as possible]]"], "markup": {}}]}, "i moved here in year": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.moves"]}, "rules": [{"app_rate": 1, "expansion": ["I came here in ", "[speaker.year_i_moved_here]"], "markup": {}}, {"app_rate": 6, "expansion": ["I moved here in ", "[speaker.year_i_moved_here]"], "markup": {}}, {"app_rate": 3, "expansion": ["I've been here since ", "[speaker.year_i_moved_here]"], "markup": {}}, {"app_rate": 5, "expansion": ["I've lived here since ", "[speaker.year_i_moved_here]"], "markup": {}}]}, "i should": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["I'd better"], "markup": {}}, {"app_rate": 1, "expansion": ["I ", "[[modal intensifier]]", " ", "[[better/should/ought to]]"], "markup": {}}, {"app_rate": 1, "expansion": ["I ", "[[better/should/ought to]]"], "markup": {}}, {"app_rate": 1, "expansion": ["I need to"], "markup": {}}, {"app_rate": 1, "expansion": ["I have to"], "markup": {}}]}, "intensifier": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 5, "expansion": ["very"], "markup": {}}, {"app_rate": 8, "expansion": ["really"], "markup": {}}, {"app_rate": 2, "expansion": ["extremely"], "markup": {}}, {"app_rate": 1, "expansion": ["uncommonly"], "markup": {}}, {"app_rate": 4, "expansion": ["quite"], "markup": {}}, {"app_rate": 1, "expansion": ["incredibly"], "markup": {}}, {"app_rate": 1, "expansion": ["unquestionably"], "markup": {}}, {"app_rate": 1, "expansion": ["undoubtedly"], "markup": {}}, {"app_rate": 1, "expansion": ["unbelievably"], "markup": {}}, {"app_rate": 2, "expansion": ["downright"], "markup": {}}, {"app_rate": 1, "expansion": ["remarkably"], "markup": {}}, {"app_rate": 1, "expansion": ["real"], "markup": {}}, {"app_rate": 1, "expansion": ["seriously"], "markup": {}}, {"app_rate": 1, "expansion": ["extraordinarily"], "markup": {}}]}, "interlocutor first name": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: speaker.belief(interlocutor, 'first name')"], "Propositions": ["subject=interlocutor;feature_type=first name;feature_value=speaker.belief(interlocutor, 'first name');feature_object_itself=None"]}, "rules": [{"app_rate": 1, "expansion": ["[[use interlocutor first name when they do not know you]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[use interlocutor first name when they know you]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[use interlocutor first name when they do not know you but they already used it]]"], "markup": {}}]}, "introduce self": {"complete": true, "deep": true, "markup": {"Moves": ["introduce self"]}, "rules": [{"app_rate": 1, "expansion": ["[[introduce self first]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[introduce self back]]"], "markup": {}}]}, "introduce self after preliminaries": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[introduce self after preliminaries male]]"], "markup": {}}, {"app_rate": 3, "expansion": ["I'm ", "[[speaker first name]]", ", by the way."], "markup": {}}]}, "introduce self after preliminaries male": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.male"]}, "rules": [{"app_rate": 1, "expansion": ["Name's ", "[[speaker first name]]", ", by the way."], "markup": {}}]}, "introduce self back": {"complete": true, "deep": false, "markup": {"Moves": ["introduce self back"], "Preconditions": ["lambda conversation: conversation.earlier_move(conversation.interlocutor, 'introduce self')"], "PushObligation": ["say nice to meet you"], "ViolationConditions": ["awkward rehash<--lambda conversation: conversation.earlier_move(conversation.speaker, 'introduce self')"]}, "rules": [{"app_rate": 1, "expansion": ["[[introduce self back if you already said your name]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[introduce self back if you haven't already said your name]]"], "markup": {}}]}, "introduce self back if you already said your name": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: conversation.earlier_move(conversation.speaker, 'say first name')"]}, "rules": [{"app_rate": 7, "expansion": ["[[nice to meet you]]"], "markup": {}}, {"app_rate": 4, "expansion": ["[[speaker first name]]", ". I guess I already said that", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[introduce self back if you already said your name>cold]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[speaker first name]]", "."], "markup": {}}, {"app_rate": 3, "expansion": ["[[speaker name]]", "."], "markup": {}}, {"app_rate": 4, "expansion": ["[[speaker first name]]", ", but I guess I already said that", "[[expressive punct]]"], "markup": {}}]}, "introduce self back if you already said your name>cold": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.personality.cold"]}, "rules": [{"app_rate": 1, "expansion": ["[[subject first name]]", ", like I said."], "markup": {}}, {"app_rate": 1, "expansion": ["Again, ", "[[subject first name]]", "."], "markup": {}}]}, "introduce self back if you have different names": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[introduce self generally]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[speaker first name]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["[[nice to meet you]]", " I'm ", "[[speaker first name]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["I'm ", "[[speaker first name]]", "."], "markup": {}}]}, "introduce self back if you have the same name": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: speaker.first_name == interlocutor.first_name"]}, "rules": [{"app_rate": 1, "expansion": ["[[express suprise at having the same name]]", " ", "[[express that you have the same name]]"], "markup": {}}]}, "introduce self back if you haven't already said your name": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[introduce self back if you have different names]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[introduce self back if you have the same name]]"], "markup": {}}]}, "introduce self first": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: not conversation.earlier_move('either', 'introduce self')"], "PushObligation": ["introduce self back"]}, "rules": [{"app_rate": 1, "expansion": ["[[introduce self first if you have already said your first name]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[introduce self first if you haven't already said your first name]]"], "markup": {}}]}, "introduce self first if you have already said your first name": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: conversation.earlier_move(conversation.speaker, 'say first name')"]}, "rules": [{"app_rate": 1, "expansion": ["Like I said, I'm ", "[[speaker first name]]", "."], "markup": {}}]}, "introduce self first if you haven't already said your first name": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: not conversation.earlier_move(conversation.speaker, 'say first name')"]}, "rules": [{"app_rate": 1, "expansion": ["[[introduce self after preliminaries]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[introduce self generally]]"], "markup": {}}]}, "introduce self generally": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[introduce self generally masculine]]"], "markup": {}}, {"app_rate": 3, "expansion": ["I'm ", "[[speaker first name]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["My name is ", "[[speaker first name]]", "."], "markup": {}}]}, "introduce self generally masculine": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.male"]}, "rules": [{"app_rate": 1, "expansion": ["Name's ", "[[speaker last name]]", ", ", "[[speaker name]]", "."], "markup": {}}]}, "is not going to": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[is not going to lower class]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[isn't/is not]]", " ", "[[going to/gonna]]"], "markup": {}}]}, "is not going to lower class": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.male and speaker.occupation and speaker.occupation.level < 2"]}, "rules": [{"app_rate": 1, "expansion": ["ain't ", "[[going to/gonna]]"], "markup": {}}]}, "isn't/is not": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["isn't"], "markup": {}}, {"app_rate": 1, "expansion": ["is not"], "markup": {}}]}, "just answer how are you to a stranger": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[answer how are you generically]]"], "markup": {}}]}, "just answer how are you to someone you know": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[answer how are you generically]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[answer how are you negatively]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[answer how are you positively]]"], "markup": {}}]}, "marker for wrapping up conversation": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["Well,"], "markup": {}}, {"app_rate": 1, "expansion": ["Yep, well,"], "markup": {}}, {"app_rate": 1, "expansion": ["Hate to say it, but"], "markup": {}}, {"app_rate": 1, "expansion": ["Sorry to say, but"], "markup": {}}, {"app_rate": 1, "expansion": ["Sorry to say it, but"], "markup": {}}, {"app_rate": 1, "expansion": ["Apologies, but"], "markup": {}}, {"app_rate": 1, "expansion": ["My apologies, but"], "markup": {}}]}, "modal intensifier": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["really"], "markup": {}}, {"app_rate": 1, "expansion": ["probably"], "markup": {}}]}, "negative adj": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 5, "expansion": ["bad"], "markup": {}}, {"app_rate": 1, "expansion": ["horrible"], "markup": {}}, {"app_rate": 1, "expansion": ["poor"], "markup": {}}, {"app_rate": 1, "expansion": ["miserable"], "markup": {}}, {"app_rate": 1, "expansion": ["rotten"], "markup": {}}, {"app_rate": 1, "expansion": ["awful"], "markup": {}}]}, "negatively ask about the weather": {"complete": true, "deep": false, "markup": {"Moves": ["say something negative", "say something negative about the weather"], "Preconditions": ["lambda speaker: speaker.game.weather == 'bad' or speaker.personality.low_a"]}, "rules": [{"app_rate": 1, "expansion": ["[[Negative adj]]", " weather, ", "[[agreement invitation marker]]", "?"], "markup": {}}, {"app_rate": 1, "expansion": ["[[Negative adj]]", " weather ", "[[today/tonight]]", ", ", "[[agreement invitation marker]]", "?"], "markup": {}}]}, "negatively assert about the weather": {"complete": true, "deep": false, "markup": {"Moves": ["say something negative", "say something negative about the weather"], "Preconditions": ["lambda speaker: speaker.game.weather == 'bad' or speaker.personality.low_a"], "ViolationConditions": ["unbound 'thing is' anaphor<--lambda conversation: conversation.last_turn and conversation.last_turn.did_not_address_topic('weather')"]}, "rules": [{"app_rate": 1, "expansion": ["The weather is ", "[[negative adj]]", "."], "markup": {}}, {"app_rate": 7, "expansion": ["[[Weather anaphor]]", "'s ", "[[negative adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 3, "expansion": ["This weather is ", "[[negative adj]]", "."], "markup": {}}, {"app_rate": 4, "expansion": ["Ugh, ", "[[weather anaphor]]", "'s ", "[[negative adj]]", "[[expressive punct]]"], "markup": {}}]}, "nice to meet you": {"complete": true, "deep": true, "markup": {"Moves": ["say nice to meet you"], "Preconditions": ["lambda conversation: conversation.earlier_move(conversation.interlocutor, 'introduce self')"]}, "rules": [{"app_rate": 1, "expansion": ["[[say nice to meet you first]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[say nice to meet you back]]"], "markup": {}}]}, "no worries": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["no worries"], "markup": {}}, {"app_rate": 1, "expansion": ["no big deal"], "markup": {}}, {"app_rate": 1, "expansion": ["no problem"], "markup": {}}, {"app_rate": 1, "expansion": ["not a big deal"], "markup": {}}, {"app_rate": 1, "expansion": ["no offense taken"], "markup": {}}, {"app_rate": 1, "expansion": ["you're fine"], "markup": {}}, {"app_rate": 1, "expansion": ["it's not a problem"], "markup": {}}]}, "positive adj": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["lovely"], "markup": {}}, {"app_rate": 1, "expansion": ["good"], "markup": {}}, {"app_rate": 1, "expansion": ["great"], "markup": {}}, {"app_rate": 1, "expansion": ["wonderful"], "markup": {}}, {"app_rate": 1, "expansion": ["excellent"], "markup": {}}, {"app_rate": 1, "expansion": ["fantastic"], "markup": {}}, {"app_rate": 1, "expansion": ["spectacular"], "markup": {}}, {"app_rate": 1, "expansion": ["amazing"], "markup": {}}, {"app_rate": 1, "expansion": ["nice"], "markup": {}}]}, "positively ask about the weather": {"complete": true, "deep": false, "markup": {"Moves": ["say something positive about the weather", "say something positive"], "Preconditions": ["lambda speaker: speaker.game.weather == 'good'"]}, "rules": [{"app_rate": 1, "expansion": ["[[Positive adj]]", " weather ", "[[today/tonight]]", ", ", "[[agreement invitation marker]]", "?"], "markup": {}}, {"app_rate": 1, "expansion": ["[[Positive adj]]", " weather, ", "[[agreement invitation marker]]", "?"], "markup": {}}]}, "positively assert about the weather": {"complete": true, "deep": false, "markup": {"Moves": ["say something positive about the weather", "say something positive"], "Preconditions": ["lambda speaker: speaker.game.weather == 'good'"]}, "rules": [{"app_rate": 5, "expansion": ["We're having ", "[[positive adj]]", " weather ", "[[today/tonight]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["The weather is ", "[[positive adj]]", "."], "markup": {}}, {"app_rate": 9, "expansion": ["[[Weather anaphor]]", "'s ", "[[positive adj]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 3, "expansion": ["This weather is ", "[[positive adj]]", "."], "markup": {}}]}, "pour synonyms that you can do to make a drink": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["pour"], "markup": {}}, {"app_rate": 1, "expansion": ["fix"], "markup": {}}, {"app_rate": 1, "expansion": ["prepare"], "markup": {}}, {"app_rate": 1, "expansion": ["hop into glasses"], "markup": {}}, {"app_rate": 1, "expansion": ["make"], "markup": {}}]}, "really/truly/certainly": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 7, "expansion": ["really"], "markup": {}}, {"app_rate": 1, "expansion": ["certainly"], "markup": {}}, {"app_rate": 2, "expansion": ["truly"], "markup": {}}, {"app_rate": 2, "expansion": ["indeed"], "markup": {}}, {"app_rate": 1, "expansion": ["in fact"], "markup": {}}]}, "reask about the weather": {"complete": true, "deep": false, "markup": {"Moves": ["reask about the weather"], "Preconditions": ["lambda conversation: conversation.earlier_move(conversation.speaker, 'ask about the weather')"], "PushObligation": ["respond about the weather"], "ViolationConditions": ["awkward rehash<--lambda conversation: conversation.earlier_move('either', 'reask about the weather')"]}, "rules": [{"app_rate": 1, "expansion": ["[[reask about the weather positively]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[reask about the weather negatively]]"], "markup": {}}]}, "reask about the weather negatively": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[reassertion marker]]", ": ", "[[negatively ask about the weather]]"], "markup": {}}]}, "reask about the weather positively": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[reassertion marker]]", ": ", "[[positively ask about the weather]]"], "markup": {}}]}, "reassert about the weather": {"complete": true, "deep": false, "markup": {"Moves": ["assert about the weather", "reassert about the weather"], "Preconditions": ["lambda conversation: not (conversation.last_turn and conversation.last_turn.speaker is conversation.speaker and conversation.last_turn.addressed_topic('weather'))", "lambda conversation: conversation.earlier_move(conversation.speaker, 'assert about the weather')"], "PushObligation": ["respond about the weather"], "ViolationConditions": ["awkward rehash<--lambda conversation: conversation.earlier_move('either', 'reassert about the weather')"]}, "rules": [{"app_rate": 1, "expansion": ["[[reassert about the weather negatively]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[reassert about the weather positively]]"], "markup": {}}]}, "reassert about the weather negatively": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[reassertion marker]]", ": ", "[[negatively assert about the weather]]"], "markup": {}}]}, "reassert about the weather positively": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[reassertion marker]]", ": ", "[[positively assert about the weather]]"], "markup": {}}]}, "reassertion marker": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[Seriously/really/i mean it]]", ", though"], "markup": {}}, {"app_rate": 1, "expansion": ["But ", "[[seriously/really/i mean it]]"], "markup": {}}]}, "redress incorrect first name usage": {"complete": true, "deep": false, "markup": {"Moves": ["redress incorrect first name usage"]}, "rules": [{"app_rate": 2, "expansion": ["Ah, my mistake."], "markup": {}}, {"app_rate": 1, "expansion": ["Ah, ", "[[sorry]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["Oh, ", "[[sorry for that]]", "."], "markup": {}}, {"app_rate": 4, "expansion": ["[[redress incorrect first name usage if you should have known their name]]"], "markup": {}}, {"app_rate": 1, "expansion": ["Oops, not sure why I thought that", "[[expressive punct]]"], "markup": {}}]}, "redress incorrect first name usage if you should have known their name": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: interlocutor in speaker.relationships"]}, "rules": [{"app_rate": 1, "expansion": ["Ugh, I'm not sure how I got that wrong", "[[expressive punct]]"], "markup": {}}]}, "redress incorrect information": {"complete": true, "deep": true, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[redress incorrect first name usage]]"], "markup": {}}]}, "repair incorrect first name usage": {"complete": true, "deep": false, "markup": {"Moves": ["repair incorrect first name usage"], "PushObligation": ["redress incorrect first name usage"]}, "rules": [{"app_rate": 1, "expansion": ["[[correct incorrect first name after arbitrary such usage]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[why did you think you knew my first name]]"], "markup": {}}]}, "repair incorrect information": {"complete": true, "deep": true, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[repair incorrect first name usage]]"], "markup": {"PushObligation": ["redress incorrect first name usage"]}}]}, "request name": {"complete": true, "deep": true, "markup": {"Moves": ["request name"], "PushObligation": ["introduce self"]}, "rules": [{"app_rate": 1, "expansion": ["And who might you be?"], "markup": {}}, {"app_rate": 1, "expansion": ["What's your name?"], "markup": {}}]}, "respond about the weather": {"complete": true, "deep": false, "markup": {"Moves": ["respond about the weather"], "Preconditions": ["lambda conversation: conversation.has_obligation(conversation.speaker, 'respond about the weather')", "lambda conversation: not conversation.earlier_move(conversation.speaker, 'respond about the weather')"]}, "rules": [{"app_rate": 1, "expansion": ["[[negatively assert about the weather]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[positively assert about the weather]]"], "markup": {}}]}, "respond again about the weather": {"complete": true, "deep": false, "markup": {"Moves": ["respond about the weather"], "Preconditions": ["lambda conversation: conversation.has_obligation(conversation.speaker, 'respond about the weather')", "lambda conversation: conversation.earlier_move(conversation.speaker, 'respond about the weather')"]}, "rules": [{"app_rate": 1, "expansion": ["[[agree about the weather]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[disagree about the weather]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[respond again about the weather generally]]"], "markup": {}}]}, "respond again about the weather generally": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[respond about the weather]]"], "markup": {}}]}, "run/leave/jet": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["run"], "markup": {}}, {"app_rate": 1, "expansion": ["leave"], "markup": {}}, {"app_rate": 1, "expansion": ["jet"], "markup": {}}, {"app_rate": 1, "expansion": ["scram"], "markup": {}}, {"app_rate": 1, "expansion": ["run off"], "markup": {}}, {"app_rate": 1, "expansion": ["go"], "markup": {}}, {"app_rate": 1, "expansion": ["go now"], "markup": {}}, {"app_rate": 1, "expansion": ["run right now"], "markup": {}}, {"app_rate": 1, "expansion": ["set off"], "markup": {}}]}, "say goodbye back": {"complete": true, "deep": false, "markup": {"Moves": ["say goodbye back"], "Preconditions": ["lambda conversation: conversation.earlier_move(conversation.interlocutor, 'say goodbye')"]}, "rules": [{"app_rate": 1, "expansion": ["[[farewell]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[farewell]]", ", ", "[[interlocutor first name]]", "[[expressive punct]]"], "markup": {}}]}, "say goodbye first": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: not conversation.earlier_move('either', 'say goodbye')"], "PushObligation": ["say goodbye back"]}, "rules": [{"app_rate": 1, "expansion": ["[[farewell]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[farewell]]", ", ", "[[interlocutor first name]]", "[[expressive punct]]"], "markup": {}}]}, "say nice to meet you back": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: conversation.last_interlocutor_turn.performed_move('say nice to meet you')", "lambda conversation: conversation.has_obligation(conversation.speaker, 'say nice to meet you')"]}, "rules": [{"app_rate": 2, "expansion": ["It's ", "[[positive adj]]", " to meet you", "[[expressive punct]]"], "markup": {}}, {"app_rate": 2, "expansion": ["Pleasure."], "markup": {}}, {"app_rate": 2, "expansion": ["It's ", "[[positive adj]]", " to meet you, ", "[[interlocutor first name]]", "[[expressive punct]]"], "markup": {}}, {"app_rate": 3, "expansion": ["And you as well."], "markup": {}}]}, "say nice to meet you first": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: not conversation.earlier_move('either', 'say nice to meet you')"], "PushObligation": ["say nice to meet you"]}, "rules": [{"app_rate": 10, "expansion": ["Nice to meet you."], "markup": {}}]}, "seriously/really/i mean it": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["seriously"], "markup": {}}, {"app_rate": 1, "expansion": ["truly"], "markup": {}}, {"app_rate": 1, "expansion": ["really"], "markup": {}}]}, "small talk": {"complete": true, "deep": true, "markup": {"Moves": ["make small talk"]}, "rules": [{"app_rate": 2, "expansion": ["[[talk about the weather]]"], "markup": {}}, {"app_rate": 5, "expansion": ["[[talk about how we are doing]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[talk about where we are from]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[talk about work]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[you are so and so right]]"], "markup": {}}]}, "sorry": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["sorry"], "markup": {}}, {"app_rate": 1, "expansion": ["I'm sorry"], "markup": {}}, {"app_rate": 1, "expansion": ["apologies"], "markup": {}}, {"app_rate": 1, "expansion": ["I apologize"], "markup": {}}]}, "sorry for that": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["I apologize for that"], "markup": {}}, {"app_rate": 1, "expansion": ["sorry for that"], "markup": {}}, {"app_rate": 1, "expansion": ["forgive my mistake"], "markup": {}}, {"app_rate": 1, "expansion": ["I'm sorry about that"], "markup": {}}]}, "speaker first name": {"complete": true, "deep": false, "markup": {"Moves": ["say first name"], "Propositions": ["subject=speaker;feature_type=first name;feature_value=speaker.first_name;feature_object_itself=None"]}, "rules": [{"app_rate": 1, "expansion": ["[speaker.first_name]"], "markup": {}}]}, "speaker last name": {"complete": true, "deep": false, "markup": {"Moves": ["say last name"], "Propositions": ["subject=speaker;feature_type=last name;feature_value=speaker.last_name;feature_object_itself=None"]}, "rules": [{"app_rate": 1, "expansion": ["[speaker.last_name]"], "markup": {}}]}, "speaker name": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[speaker first name]]", " ", "[[speaker last name]]"], "markup": {}}]}, "speaker shift": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.occupation"], "Propositions": ["subject=speaker;feature_type=job shift;feature_value=speaker.occupation.shift;feature_object_itself=None"]}, "rules": [{"app_rate": 1, "expansion": ["the ", "[speaker.occupation.shift]", " shift"], "markup": {}}, {"app_rate": 1, "expansion": ["[speaker.occupation.shift]", "s"], "markup": {}}]}, "speaker vocation": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.occupation"], "Propositions": ["subject=speaker;feature_type=job title;feature_value=speaker.occupation.vocation;feature_object_itself=None"]}, "rules": [{"app_rate": 1, "expansion": ["[speaker.occupation.vocation]"], "markup": {}}]}, "speaker workplace": {"complete": true, "deep": false, "markup": {"ChangeSubjectTo": ["speaker.occupation.company"], "Preconditions": ["lambda speaker: speaker.occupation"], "Propositions": ["subject=speaker;feature_type=workplace;feature_value=speaker.occupation.company.name;feature_object_itself=speaker.occupation.company"]}, "rules": [{"app_rate": 1, "expansion": ["[speaker.occupation.company.name]"], "markup": {}}]}, "storm off": {"complete": true, "deep": true, "markup": {"Moves": ["storm off", "end conversation after rude remark"]}, "rules": [{"app_rate": 1, "expansion": ["That is incredibly rude. This conversation is over."], "markup": {}}]}, "subject first name": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, subject: speaker.belief(subject, 'first name')"], "Propositions": ["subject=subject;feature_type=last name;feature_value=speaker.belief(subject, 'first name');feature_object_itself=None"]}, "rules": [{"app_rate": 1, "expansion": ["[speaker.belief(subject, 'first name')]"], "markup": {}}]}, "subject full name": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, subject: speaker.belief(subject, 'last name')", "lambda speaker, subject: speaker.belief(subject, 'first name')"]}, "rules": [{"app_rate": 1, "expansion": ["[[subject first name]]", " ", "[[subject last name]]"], "markup": {}}]}, "subject last name": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, subject: speaker.belief(subject, 'last name')"], "Propositions": ["subject=subject;feature_type=last name;feature_value=speaker.belief(subject, 'last name');feature_object_itself=None"]}, "rules": [{"app_rate": 1, "expansion": ["[speaker.belief(subject, 'last name')]"], "markup": {}}]}, "talk about how we are doing": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[ask how are you]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[answer how are you]]"], "markup": {}}]}, "talk about the weather": {"complete": true, "deep": false, "markup": {"AddressTopic": ["weather"]}, "rules": [{"app_rate": 1, "expansion": ["[[ask about the weather]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[assert about the weather]]"], "markup": {}}]}, "talk about where we are from": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[ask are you from here]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[answer are you from here]]"], "markup": {}}]}, "talk about work": {"complete": true, "deep": false, "markup": {"AddressTopic": ["work"]}, "rules": [{"app_rate": 1, "expansion": ["[[ask where do you work]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[answer where do you work]]"], "markup": {}}]}, "thanks for the chat/conversation>gregarious": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.personality.gregarious"]}, "rules": [{"app_rate": 1, "expansion": ["[[Thanks/thank you]]", " for the ", "[[positive adj]]", " ", "[[chat/conversation]]", "[[expressive punct]]"], "markup": {}}]}, "the act of working": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["the grind"], "markup": {}}, {"app_rate": 1, "expansion": ["the old grind"], "markup": {}}, {"app_rate": 1, "expansion": ["work"], "markup": {}}, {"app_rate": 1, "expansion": ["my duties here"], "markup": {}}, {"app_rate": 1, "expansion": ["my duties"], "markup": {}}, {"app_rate": 1, "expansion": ["my chores"], "markup": {}}, {"app_rate": 1, "expansion": ["my chores here"], "markup": {}}, {"app_rate": 1, "expansion": ["my old work-a-day life"], "markup": {}}, {"app_rate": 1, "expansion": ["my sorry plight"], "markup": {}}, {"app_rate": 1, "expansion": ["my plight here"], "markup": {}}, {"app_rate": 1, "expansion": ["my sorry plight here"], "markup": {}}, {"app_rate": 1, "expansion": ["my sorry work-a-day life"], "markup": {}}]}, "this as comedic demonstrative": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["this"], "markup": {}}, {"app_rate": 1, "expansion": ["this here"], "markup": {}}, {"app_rate": 1, "expansion": ["this old"], "markup": {}}]}, "today/tonight": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["to", "[speaker.game.time_of_day]"], "markup": {}}]}, "um/hmm/huh": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 9, "expansion": ["um"], "markup": {}}, {"app_rate": 5, "expansion": ["uh"], "markup": {}}, {"app_rate": 2, "expansion": ["hmm"], "markup": {}}, {"app_rate": 2, "expansion": ["huh"], "markup": {}}]}, "use correct interlocutor first name": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: speaker.accurate_belief(interlocutor, 'first name')"]}, "rules": [{"app_rate": 1, "expansion": ["[speaker.belief(interlocutor, 'first name')]"], "markup": {}}]}, "use correct interlocutor first name when they do not know you": {"complete": true, "deep": false, "markup": {"PushObligation": ["request how do you know my name"]}, "rules": [{"app_rate": 1, "expansion": ["[[use correct interlocutor first name]]"], "markup": {}}]}, "use incorrect interlocutor first name": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: speaker.inaccurate_belief(interlocutor, 'first name')"], "PushObligation": ["repair incorrect first name usage"]}, "rules": [{"app_rate": 1, "expansion": ["[speaker.belief(interlocutor, 'first name')]"], "markup": {}}]}, "use incorrect interlocutor first name when they do not know you": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[use incorrect interlocutor first name]]"], "markup": {}}]}, "use interlocutor first name when they do not know you": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: not conversation.earlier_move(conversation.interlocutor, 'say first name')", "lambda speaker, interlocutor: interlocutor not in speaker.relationships"]}, "rules": [{"app_rate": 1, "expansion": ["[[use correct interlocutor first name when they do not know you]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[use incorrect interlocutor first name when they do not know you]]"], "markup": {}}]}, "use interlocutor first name when they do not know you but they already used it": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: interlocutor in speaker.relationships", "lambda conversation: conversation.earlier_move(conversation.interlocutor, 'say first name')"]}, "rules": [{"app_rate": 1, "expansion": ["[[use correct interlocutor first name]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[use incorrect interlocutor first name]]"], "markup": {}}]}, "use interlocutor first name when they know you": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: interlocutor in speaker.relationships"]}, "rules": [{"app_rate": 1, "expansion": ["[[use correct interlocutor first name]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[use incorrect interlocutor first name]]"], "markup": {}}]}, "wash synonyms that you can do to a counter": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["wipe"], "markup": {}}, {"app_rate": 1, "expansion": ["clean"], "markup": {}}, {"app_rate": 1, "expansion": ["wash"], "markup": {}}, {"app_rate": 1, "expansion": ["wipe off"], "markup": {}}, {"app_rate": 1, "expansion": ["wash up"], "markup": {}}, {"app_rate": 1, "expansion": ["take a towel to"], "markup": {}}, {"app_rate": 1, "expansion": ["take a rag to"], "markup": {}}, {"app_rate": 1, "expansion": ["swipe a towel over"], "markup": {}}, {"app_rate": 1, "expansion": ["swipe a rag over"], "markup": {}}, {"app_rate": 1, "expansion": ["drag a towel over"], "markup": {}}, {"app_rate": 1, "expansion": ["drag a rag over"], "markup": {}}]}, "weather anaphor": {"complete": true, "deep": false, "markup": {"ViolationConditions": ["unbound 'thing is' anaphor<--lambda conversation: conversation.last_turn and conversation.last_turn.did_not_address_topic('weather')"]}, "rules": [{"app_rate": 1, "expansion": ["it"], "markup": {}}]}, "why did you think you knew my first name": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["I'm ", "[[speaker first name]]", ", not ", "[interlocutor.belief(speaker, 'first name')]", "."], "markup": {}}, {"app_rate": 2, "expansion": ["My name is ", "[[speaker first name]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["That's not my name."], "markup": {}}, {"app_rate": 1, "expansion": ["I think you're mistaking me for someone else. I'm ", "[[speaker first name]]", "."], "markup": {}}, {"app_rate": 4, "expansion": ["I think you're mistaking me for someone else. I'm ", "[[speaker first name]]", ", not ", "[interlocutor.belief(speaker, 'first name')]", "."], "markup": {}}]}, "wrap up conversation": {"complete": true, "deep": true, "markup": {"Moves": ["wrap up conversation"], "PushObligation": ["say goodbye"]}, "rules": [{"app_rate": 1, "expansion": ["[[wrap up conversation with someone you know]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[wrap up conversation with a stranger]]"], "markup": {}}]}, "wrap up conversation with a stranger": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: interlocutor not in speaker.relationships"]}, "rules": [{"app_rate": 1, "expansion": ["[[wrap up conversation with a stranger at a business]]"], "markup": {}}]}, "wrap up conversation with a stranger at a business": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[wrap up conversation with a stranger at a business when you are working there]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[wrap up conversation with a stranger at a business when they are working there]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[wrap up conversation with a stranger at a business when neither is working there]]"], "markup": {}}]}, "wrap up conversation with a stranger at a business when neither is working there": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[i should]]", " ", "[[run/leave/jet]]", ". ", "[[Thanks for the chat/conversation]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[i should]]", " ", "[[run/leave/jet]]", ". Maybe I'll see you around here again."], "markup": {}}, {"app_rate": 1, "expansion": ["[[i should]]", " ", "[[run/leave/jet]]", "."], "markup": {}}]}, "wrap up conversation with a stranger at a business when they are working there": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda interlocutor: interlocutor.routine.working"]}, "rules": [{"app_rate": 1, "expansion": ["[[i should]]", " ", "[[run/leave/jet]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["[[i should]]", " ", "[[run/leave/jet]]", ". ", "[[enjoy the rest of your shift]]"], "markup": {}}]}, "wrap up conversation with a stranger at a business when you are working there": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.routine.working"]}, "rules": [{"app_rate": 1, "expansion": ["[[wrap up conversation with a stranger at a business when you are working there as a bartender]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[wrap up conversation with a stranger at a business when you are working there>cold]]"], "markup": {}}]}, "wrap up conversation with a stranger at a business when you are working there as a bartender": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.occupation and speaker.occupation.vocation == 'bartender'"]}, "rules": [{"app_rate": 1, "expansion": ["[[wrap up conversation with a stranger at a business when you are working there as a bartender>gregarious]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[wrap up conversation with a stranger at a business when you are working there as a bartender>cold]]"], "markup": {}}]}, "wrap up conversation with a stranger at a business when you are working there as a bartender>cold": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.personality.cold"]}, "rules": [{"app_rate": 1, "expansion": ["You're distracting me from my bartending."], "markup": {}}]}, "wrap up conversation with a stranger at a business when you are working there as a bartender>gregarious": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.personality.gregarious"]}, "rules": [{"app_rate": 1, "expansion": ["[[marker for wrapping up conversation]]", " ", "[[this as comedic demonstrative]]", " counter ", "[[is not going to]]", " ", "[[wash synonyms that you can do to a counter]]", " itself. ", "[[i better get back to work]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[marker for wrapping up conversation]]", " these drinks ", "[[are not going to]]", " ", "[[pour synonyms that you can do to make a drink]]", " themselves. ", "[[i better get back to work]]"], "markup": {}}]}, "wrap up conversation with a stranger at a business when you are working there>cold": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker: speaker.personality.cold"]}, "rules": [{"app_rate": 1, "expansion": ["You're distracting me from my work right now."], "markup": {"ViolationConditions": ["abort initiated conversation<--lambda conversation: conversation.speaker is conversation.initiator"]}}, {"app_rate": 1, "expansion": ["This conversation is distracting me from my work."], "markup": {"ViolationConditions": ["abort initiated conversation<--lambda conversation: conversation.speaker is conversation.initiator"]}}, {"app_rate": 1, "expansion": ["I need to return to work now."], "markup": {}}, {"app_rate": 1, "expansion": ["I have to return to work now."], "markup": {}}, {"app_rate": 1, "expansion": ["I have to return to my duties now."], "markup": {}}]}, "wrap up conversation with someone you know": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: interlocutor in speaker.relationships"]}, "rules": [{"app_rate": 1, "expansion": ["[[wrap up conversation with someone you know abruptly]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[wrap up conversation with someone you know after many turns]]"], "markup": {}}]}, "wrap up conversation with someone you know abruptly": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: len(conversation.turns) < 6"]}, "rules": [{"app_rate": 1, "expansion": ["[[wrap up conversation with someone you know abruptly when you are initiator]]"], "markup": {}}, {"app_rate": 1, "expansion": ["[[wrap up conversation with someone you know abruptly when you are recipient]]"], "markup": {"Preconditions": ["lambda conversation: conversation.speaker is not conversation.initiator"]}}]}, "wrap up conversation with someone you know abruptly when you are initiator": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: conversation.speaker is conversation.initiator"]}, "rules": [{"app_rate": 1, "expansion": ["[[Oh shoot]]", ", ", "[[sorry]]", ", but ", "[[I have to go now]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["[[Oh shoot]]", ", you know what, ", "[[I have to go now]]", "."], "markup": {}}, {"app_rate": 2, "expansion": ["[[Oh shoot]]", ", this is rude, but ", "[[I have to go now]]", "."], "markup": {}}]}, "wrap up conversation with someone you know abruptly when you are recipient": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["Hey, ", "[[sorry]]", ", but ", "[[I have to go now]]", "."], "markup": {}}, {"app_rate": 1, "expansion": ["[[interlocutor first name]]", ", ", "[[sorry]]", ", but ", "[[I have to go now]]", "."], "markup": {}}]}, "wrap up conversation with someone you know after many turns": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda conversation: len(conversation.turns) >= 6"]}, "rules": [{"app_rate": 1, "expansion": ["[[Marker to wrap up conversation with someone you know]]", ", it's been ", "[[positive adj]]", ", but ", "[[I have to go now]]", "."], "markup": {}}]}, "you are first name right": {"complete": true, "deep": false, "markup": {"Moves": ["request to confirm or correct first name"], "PushObligation": ["confirm or correct first name"]}, "rules": [{"app_rate": 1, "expansion": ["You're ", "[[interlocutor first name]]", ", right?"], "markup": {}}]}, "you are so and so right": {"complete": true, "deep": false, "markup": {}, "rules": [{"app_rate": 1, "expansion": ["[[you are first name right]]"], "markup": {}}]}, "you do not look familiar": {"complete": true, "deep": false, "markup": {"Preconditions": ["lambda speaker, interlocutor: interlocutor not in speaker.mind.mental_models"]}, "rules": [{"app_rate": 3, "expansion": ["You don't look familiar"], "markup": {}}, {"app_rate": 1, "expansion": ["I don't think I've seen you before"], "markup": {}}, {"app_rate": 1, "expansion": ["I haven't seen you before"], "markup": {}}, {"app_rate": 1, "expansion": ["Yours is a face I don't recognize"], "markup": {}}]}}, "system_vars": ["[interlocutor.belief(speaker, 'first name')]", "[interlocutor.location.city.name]", "[speaker.belief(interlocutor, 'first name')]", "[speaker.belief(subject, 'first name')]", "[speaker.belief(subject, 'last name')]", "[speaker.first_name]", "[speaker.game.time_of_day]", "[speaker.last_name]", "[speaker.location.city.name]", "[speaker.occupation.company.name]", "[speaker.occupation.shift]", "[speaker.occupation.vocation]", "[speaker.year_i_moved_here]", "[subject.honorific]", "[subject.possessive_pronoun]"]}